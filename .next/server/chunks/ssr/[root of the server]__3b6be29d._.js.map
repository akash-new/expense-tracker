{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///Users/apple/Downloads/expense-tracker/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/apple/Downloads/expense-tracker/src/ai/flows/get-saving-tips.ts"],"sourcesContent":["// src/ai/flows/get-saving-tips.ts\n'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow that provides personalized saving tips based on user spending habits.\n *\n * - getSavingTips - An exported function that calls the getSavingTipsFlow.\n * - GetSavingTipsInput - The input type for the getSavingTips function.\n * - GetSavingTipsOutput - The output type for the getSavingTips function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\n// Debug logging function\nfunction debugLog(message: string, data?: any) {\n  const timestamp = new Date().toISOString();\n  console.log(`[DEBUG][${timestamp}] ${message}`);\n  if (data) {\n    console.log(JSON.stringify(data, null, 2));\n  }\n}\n\nconst GetSavingTipsInputSchema = z.object({\n  spendingHabits: z\n    .string()\n    .describe(\n      'A detailed description of the user\\'s spending habits, including categories and amounts spent.'\n    ),\n});\nexport type GetSavingTipsInput = z.infer<typeof GetSavingTipsInputSchema>;\n\nconst GetSavingTipsOutputSchema = z.object({\n  savingTips: z\n    .string()\n    .describe('Personalized saving tips based on the provided spending habits.'),\n});\nexport type GetSavingTipsOutput = z.infer<typeof GetSavingTipsOutputSchema>;\n\nexport async function getSavingTips(input: GetSavingTipsInput): Promise<GetSavingTipsOutput> {\n  debugLog(\"getSavingTips called with input:\", input);\n  \n  try {\n    // Check Google AI API key\n    const apiKey = process.env.GOOGLE_API_KEY;\n    debugLog(\"Google API Key status:\", { exists: !!apiKey, length: apiKey?.length });\n    \n    // Get results from the flow\n    const result = await getSavingTipsFlow(input);\n    debugLog(\"getSavingTipsFlow result:\", result);\n    \n    return result;\n  } catch (error) {\n    debugLog(\"Error in getSavingTips:\", {\n      message: error instanceof Error ? error.message : String(error),\n      stack: error instanceof Error ? error.stack : undefined\n    });\n    throw error;\n  }\n}\n\nconst prompt = ai.definePrompt({\n  name: 'getSavingTipsPrompt',\n  input: {schema: GetSavingTipsInputSchema},\n  output: {schema: GetSavingTipsOutputSchema},\n  prompt: `You are a personal finance advisor. Based on the user's spending habits, provide personalized saving tips.\n\nSpending Habits: {{{spendingHabits}}}\n\nProvide specific and actionable advice to help the user save money.`,\n});\n\nconst getSavingTipsFlow = ai.defineFlow(\n  {\n    name: 'getSavingTipsFlow',\n    inputSchema: GetSavingTipsInputSchema,\n    outputSchema: GetSavingTipsOutputSchema,\n  },\n  async input => {\n    debugLog(\"getSavingTipsFlow started with input:\", input);\n    \n    try {\n      const promptResult = await prompt(input);\n      debugLog(\"Prompt execution result:\", promptResult);\n      \n      if (!promptResult.output) {\n        debugLog(\"Warning: No output returned from prompt\");\n        throw new Error(\"AI service did not return any output. Please check your API key configuration.\");\n      }\n      \n      return promptResult.output;\n    } catch (error) {\n      debugLog(\"Error in getSavingTipsFlow:\", {\n        message: error instanceof Error ? error.message : String(error),\n        name: error instanceof Error ? error.name : 'Unknown Error',\n        stack: error instanceof Error ? error.stack : undefined\n      });\n      throw error;\n    }\n  }\n);\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;;AAGlC;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,yBAAyB;AACzB,SAAS,SAAS,OAAe,EAAE,IAAU;IAC3C,MAAM,YAAY,IAAI,OAAO,WAAW;IACxC,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,SAAS;IAC9C,IAAI,MAAM;QACR,QAAQ,GAAG,CAAC,KAAK,SAAS,CAAC,MAAM,MAAM;IACzC;AACF;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,gBAAgB,uIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,YAAY,uIAAA,CAAA,IAAC,CACV,MAAM,GACN,QAAQ,CAAC;AACd;AAGO,eAAe,uCAAW,GAAX,cAAc,KAAyB;IAC3D,SAAS,oCAAoC;IAE7C,IAAI;QACF,0BAA0B;QAC1B,MAAM,SAAS,QAAQ,GAAG,CAAC,cAAc;QACzC,SAAS,0BAA0B;YAAE,QAAQ,CAAC,CAAC;YAAQ,QAAQ,QAAQ;QAAO;QAE9E,4BAA4B;QAC5B,MAAM,SAAS,MAAM,kBAAkB;QACvC,SAAS,6BAA6B;QAEtC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,SAAS,2BAA2B;YAClC,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YACzD,OAAO,iBAAiB,QAAQ,MAAM,KAAK,GAAG;QAChD;QACA,MAAM;IACR;AACF;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;mEAIwD,CAAC;AACpE;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,SAAS,yCAAyC;IAElD,IAAI;QACF,MAAM,eAAe,MAAM,OAAO;QAClC,SAAS,4BAA4B;QAErC,IAAI,CAAC,aAAa,MAAM,EAAE;YACxB,SAAS;YACT,MAAM,IAAI,MAAM;QAClB;QAEA,OAAO,aAAa,MAAM;IAC5B,EAAE,OAAO,OAAO;QACd,SAAS,+BAA+B;YACtC,SAAS,iBAAiB,QAAQ,MAAM,OAAO,GAAG,OAAO;YACzD,MAAM,iBAAiB,QAAQ,MAAM,IAAI,GAAG;YAC5C,OAAO,iBAAiB,QAAQ,MAAM,KAAK,GAAG;QAChD;QACA,MAAM;IACR;AACF;;;IA5DoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///Users/apple/Downloads/expense-tracker/src/app/savings-ai/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/savings-ai/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/savings-ai/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 422, "column": 0}, "map": {"version":3,"sources":["file:///Users/apple/Downloads/expense-tracker/src/app/savings-ai/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/savings-ai/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/savings-ai/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA","debugId":null}},
    {"offset": {"line": 436, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}